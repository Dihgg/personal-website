version: '3.8'
services:
  dihgg-front:
    build: front/
    container_name: dihgg-front
    env_file:
      - .env
    ports:
      - ${FRONT_PORT}:${FRONT_PORT}
    volumes:
      - ./front/dist/:/usr/share/nginx/html
    links:
      - dihgg-api
    depends_on:
      - dihgg-api
      - dihgg-db
    networks:
      - webnet
  dihgg-api:
    container_name: dihgg-api
    build:
      context: ./api
      target: development
    volumes:
      - .:/usr/share/app
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - dihgg-db
    command: npm run start
    links:
      - dihgg-db
    networks:
      - webnet
  dihgg-db:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ./database:/var/lib/database
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGDATA: /var/lib/database
    networks:
      - webnet
volumes:
  dihgg-db:
networks:
  webnet:
